input CheckPinInput {
  pin: String!
}

# Autogenerated return type of CheckPin
type CheckPinPayload {
  success: Boolean!
}

input CreateDivisionInput {
  bracketType: String
  name: String
  numDays: Int
  numTeams: Int
}

# Autogenerated return type of CreateDivision
type CreateDivisionPayload {
  division: Division!
  message: String
  success: Boolean!
  userErrors: [Error!]
}

input CreateFieldInput {
  geoJson: String
  lat: Float
  long: Float
  name: String
}

# Autogenerated return type of CreateField
type CreateFieldPayload {
  field: Field!
  message: String
  success: Boolean!
  userErrors: [Error!]
}

input CreateTeamInput {
  divisionId: ID
  email: String
  name: String
  phone: String
  seed: Int
}

# Autogenerated return type of CreateTeam
type CreateTeamPayload {
  message: String
  success: Boolean!
  team: Team!
  userErrors: [Error!]
}

scalar DateTime

input DeleteDivisionInput {
  confirm: Boolean
  divisionId: ID!
}

# Autogenerated return type of DeleteDivision
type DeleteDivisionPayload {
  confirm: Boolean
  message: String
  success: Boolean!
  userErrors: [Error!]
}

input DeleteFieldInput {
  confirm: Boolean
  fieldId: ID!
}

# Autogenerated return type of DeleteField
type DeleteFieldPayload {
  confirm: Boolean
  message: String
  success: Boolean!
  userErrors: [Error!]
}

input DeleteTeamInput {
  confirm: Boolean
  teamId: ID!
}

# Autogenerated return type of DeleteTeam
type DeleteTeamPayload {
  confirm: Boolean
  message: String
  notAllowed: Boolean
  success: Boolean!
  userErrors: [Error!]
}

# A Division
type Division {
  bracketType: String
  id: ID
  isSeeded: Boolean
  name: String
  needsSeed: Boolean
  numDays: Int
  numTeams: Int
  teamsCount: Int
}

type Error {
  field: String!
  message: String!
}

# A Field
type Field {
  geoJson: String
  id: ID
  lat: Float
  long: Float
  name: String
}

# A Game
type Game {
  awayName: String
  awayScore: Int
  division: Division
  endTime: DateTime
  fieldId: ID
  fieldName: String
  homeName: String
  homeScore: Int
  id: ID!
  pool: String

  # True when a score has been submitted and
  #      accepted by the tournament as confirmed according to its rules.
  #      Some tournament require a submission from both teams or a validated
  #      confirmation.
  scoreConfirmed: Boolean!
  startTime: DateTime
}

# Tournament Map
type Map {
  lat: Float!
  long: Float!
  zoom: Int!
}

type Mutation {
  checkPin(input: CheckPinInput!): CheckPinPayload
  createDivision(input: CreateDivisionInput!): CreateDivisionPayload
  createField(input: CreateFieldInput!): CreateFieldPayload
  createTeam(input: CreateTeamInput!): CreateTeamPayload
  deleteDivision(input: DeleteDivisionInput!): DeleteDivisionPayload
  deleteField(input: DeleteFieldInput!): DeleteFieldPayload
  deleteTeam(input: DeleteTeamInput!): DeleteTeamPayload
  scheduleGame(input: ScheduleGameInput!): ScheduleGamePayload
  seedDivision(input: SeedDivisionInput!): SeedDivisionPayload
  submitScore(input: SubmitScoreInput!): SubmitScorePayload
  updateDivision(input: UpdateDivisionInput!): UpdateDivisionPayload
  updateField(input: UpdateFieldInput!): UpdateFieldPayload
  updateMap(input: UpdateMapInput!): UpdateMapPayload
  updateScore(input: UpdateScoreInput!): UpdateScorePayload
  updateSettings(input: UpdateSettingsInput!): UpdateSettingsPayload
  updateTeam(input: UpdateTeamInput!): UpdateTeamPayload
}

scalar NullableInt

scalar PinCode

type Query {
  division(id: ID!): Division
  divisions: [Division!]
  field(id: ID!): Field
  fields: [Field!]
  game(id: ID!): Game
  games(hasTeam: Boolean, scheduled: Boolean): [Game!]
  map: Map
  scoreReport(id: ID!): ScoreReport
  scoreReports: [ScoreReport!]
  settings: Settings
  team(id: ID!): Team
  teams: [Team!]
}

input ScheduleGameInput {
  endTime: DateTime!
  fieldId: ID!
  gameId: ID!
  startTime: DateTime!
}

# Autogenerated return type of ScheduleGame
type ScheduleGamePayload {
  game: Game!
  message: String
  success: Boolean!
  userErrors: [Error!]
}

# A ScoreReport
type ScoreReport {
  attitude: Int!
  awayScore: Int!
  comment: String
  communication: Int!
  fairness: Int!
  fouls: Int!
  homeScore: Int!
  id: ID!
  rulesKnowledge: Int!
  submitterFingerprint: String!
  team: Team!
}

input SeedDivisionInput {
  confirm: Boolean
  divisionId: ID!
  seeds: [Int!]
  teamIds: [ID!]
}

# Autogenerated return type of SeedDivision
type SeedDivisionPayload {
  confirm: Boolean
  message: String
  success: Boolean!
}

# Tourgraphql_nament Settings
type Settings {
  protectScoreSubmit: Boolean!
}

input SubmitScoreInput {
  attitude: Int!
  awayScore: Int!
  comments: String
  communication: Int!
  fairness: Int!
  fouls: Int!
  gameId: ID!
  homeScore: Int!
  rulesKnowledge: Int!
  submitterFingerprint: String!
  teamId: ID!
}

# Autogenerated return type of SubmitScore
type SubmitScorePayload {
  success: Boolean!
}

# A Team
type Team {
  division: Division
  divisionId: Int
  email: String
  id: ID
  name: String
  phone: String
  seed: Int
}

input UpdateDivisionInput {
  bracketType: String
  confirm: Boolean
  divisionId: ID!
  name: String
  numDays: Int
  numTeams: Int
}

# Autogenerated return type of UpdateDivision
type UpdateDivisionPayload {
  confirm: Boolean
  division: Division!
  message: String
  success: Boolean!
  userErrors: [Error!]
}

input UpdateFieldInput {
  fieldId: ID!
  geoJson: String
  lat: Float
  long: Float
  name: String
}

# Autogenerated return type of UpdateField
type UpdateFieldPayload {
  field: Field!
  message: String
  success: Boolean!
  userErrors: [Error!]
}

input UpdateMapInput {
  lat: Float!
  long: Float!
  zoom: Int!
}

# Autogenerated return type of UpdateMap
type UpdateMapPayload {
  success: Boolean!
}

input UpdateScoreInput {
  awayScore: Int!
  force: Boolean
  gameId: ID!
  homeScore: Int!
  resolve: Boolean
}

# Autogenerated return type of UpdateScore
type UpdateScorePayload {
  message: String
  success: Boolean!
}

input UpdateSettingsInput {
  confirm: Boolean
  gameConfirmSetting: String
  handle: String
  name: String
  scoreSubmitPin: PinCode
  timezone: String
}

# Autogenerated return type of UpdateSettings
type UpdateSettingsPayload {
  confirm: Boolean
  message: String
  success: Boolean!
  userErrors: [Error!]
}

input UpdateTeamInput {
  confirm: Boolean
  divisionId: ID
  email: String
  name: String
  phone: String
  seed: NullableInt
  teamId: ID!
}

# Autogenerated return type of UpdateTeam
type UpdateTeamPayload {
  confirm: Boolean
  message: String
  notAllowed: Boolean
  success: Boolean!
  team: Team!
  userErrors: [Error!]
}