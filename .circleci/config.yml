version: 2

jobs:
  build:
    docker:
      - image: circleci/ruby:2.6.3-node-browsers
      - image: circleci/postgres:11.5
      - image: redis:4.0.14

    environment:
      PGUSER: ubuntu
      RACK_ENV: test
      RAILS_ENV: test
      REACT_APP_RAILS_ENV: test
      GENERATE_SOURCEMAP: false

    steps:
      # Checkout the source code
      - checkout

      # Bundler
      ## restore bundle cache
      - type: cache-restore
        key: Gemfile-{{ checksum "Gemfile.lock" }}

      ## bundle install dependencies
      - run: bundle install --with ci --without production --without development --path vendor/bundle

      ## store bundle cache
      - type: cache-save
        key: Gemfile-{{ checksum "Gemfile.lock" }}
        paths:
          - vendor/bundle

      # Yarn
      ## restore yarn cache
      - restore_cache:
          key: |
            yarn
            {{ checksum "yarn.lock" }}
            {{ checksum "clients/admin/yarn.lock" }}
            {{ checksum "clients/player_app/yarn.lock" }}

      ## yarn install dependencies
      - run: yarn install --frozen-lockfile

      ## store yarn cache
      - save_cache:
          key: |
            yarn
            {{ checksum "yarn.lock" }}
            {{ checksum "clients/admin/yarn.lock" }}
            {{ checksum "clients/player_app/yarn.lock" }}
          paths:
            - ~/.cache/yarn


      # Admin
      ## generate checksum for admin
      - type: shell
        command: ./.circleci/admin_checksum.sh > admin-checksum.txt

      ## restore admin cache
      - restore_cache:
          key: admin-{{ checksum "admin-checksum.txt" }}-v5

      ## build admin
      - run:
          working_directory: clients/admin
          command: if [ ! -d "build" ]; then yarn build; fi

      ## store admin cache
      - save_cache:
          key: admin-{{ checksum "admin-checksum.txt" }}-v5
          paths:
            - clients/admin/src/generated.ts
            - clients/admin/types/generated.d.ts
            - clients/admin/build

      ## typecheck the admin
      - run:
          working_directory: clients/admin
          command: yarn type-check


      # Player App
      ## generate checksum for player_app
      - type: shell
        command: ./.circleci/player_app_checksum.sh > player_app-checksum.txt

      ## restore player_app cache
      - restore_cache:
          key: player_app-{{ checksum "player_app-checksum.txt" }}

      ## build player_app
      - run:
          working_directory: clients/player_app
          command: if [ ! -d "build" ]; then yarn build; fi

      ## store player_app cache
      - save_cache:
          key: player_app-{{ checksum "player_app-checksum.txt" }}
          paths:
            - clients/player_app/build


      # Assets
      ## generate checksum for assets
      - type: shell
        command: ./.circleci/assets_checksum.sh > assets-checksum.txt

      ## restore assets cache
      - restore_cache:
          key: assets-{{ checksum "assets-checksum.txt" }}-{{ checksum "Gemfile.lock" }}

      ## compile assets
      - run: bundle exec rake assets:precompile

      ## store assets cache
      - save_cache:
          key: assets-{{ checksum "assets-checksum.txt" }}-{{ checksum "Gemfile.lock" }}
          paths:
            - tmp/cache/assets


      # Database setup
      - run: bundle exec rake db:create
      - run: bundle exec rake db:schema:load

      # Run tests
      - run: bundle exec rails test

      # Store Artifacts
      - store_artifacts:
          path: ~/project/tmp/coverage
          destination: coverage

      - store_artifacts:
          path: ~/project/tmp/perf
          destination: performance

      - store_artifacts:
          path: ~/project/tmp/capybara
          destination: capybara
