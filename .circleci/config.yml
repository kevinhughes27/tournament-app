version: 2

jobs:
  build:
    docker:
      - image: circleci/ruby:2.5.3-node-browsers
      - image: circleci/postgres:9.4.12-alpine
      - image: redis:2.8.6

    environment:
      PGUSER: ubuntu
      RAILS_ENV: test
      RACK_ENV: test
      GENERATE_SOURCEMAP: false

    steps:
      # Checkout the source code
      - checkout
      - run: git submodule update --init

      # Bundler
      ## restore bundle cache
      - type: cache-restore
        key: Gemfile-{{ checksum "Gemfile.lock" }}

      ## bundle install dependencies
      - run: bundle install --with ci --without production --without development --path vendor/bundle

      ## store bundle cache
      - type: cache-save
        key: Gemfile-{{ checksum "Gemfile.lock" }}
        paths:
          - vendor/bundle

      # Yarn
      ## restore yarn cache
      - restore_cache:
          key: yarn2-{{ checksum "yarn.lock" }}-{{ checksum "clients/admin/yarn.lock" }}-{{ checksum "clients/player_app/yarn.lock" }}

      ## yarn install dependencies
      - run: yarn install

      ## store yarn cache
      - save_cache:
          key: yarn2-{{ checksum "yarn.lock" }}-{{ checksum "clients/admin/yarn.lock" }}-{{ checksum "clients/player_app/yarn.lock" }}
          paths:
            - node_modules
            - clients/admin/node_modules
            - clients/player_app/node_modules


      # Admin
      ## generate checksum for admin
      - type: shell
        command: |
          find clients/admin/* -not -path "*node_modules*" -type f 2>/dev/null -exec md5sum {} \; > admin-checksum.txt

      ## restore admin cache
      - restore_cache:
          key: admin-{{ checksum "admin-checksum.txt" }}

      ## build admin
      - run:
          working_directory: clients/admin
          command: if [ ! -d "build" ]; then yarn build; fi

      ## store admin cache
      - save_cache:
          key: admin-{{ checksum "admin-checksum.txt" }}
          paths:
            - clients/admin/build

      ## typecheck the admin
      - run:
          working_directory: clients/admin
          command: yarn type-check


      # Player Appp
      ## generate checksum for player_app
      - type: shell
        command: |
          git submodule status > player_app-checksum.txt

      ## restore player_app cache
      - restore_cache:
          key: player_app-{{ checksum "player_app-checksum.txt" }}

      ## build player_app
      - run:
          working_directory: clients/player_app
          command: if [ ! -d "build" ]; then yarn build; fi

      ## store player_app cache
      - save_cache:
          key: player_app-{{ checksum "player_app-checksum.txt" }}
          paths:
            - clients/player_app/build


      # Assets
      ## generate checksum for assets
      - type: shell
        command: |
          find app/assets/* -type f 2>/dev/null -exec md5sum {} \; > assets-checksum.txt

      ## restore assets cache
      - restore_cache:
          key: assets-{{ checksum "assets-checksum.txt" }}-{{ checksum "Gemfile.lock" }}

      ## compile assets
      - run: bundle exec rake assets:precompile

      ## store assets cache
      - save_cache:
          key: assets-{{ checksum "assets-checksum.txt" }}-{{ checksum "Gemfile.lock" }}
          paths:
            - public/assets
            - tmp/cache/assets


      # Database setup
      - run: bundle exec rake db:create
      - run: bundle exec rake db:schema:load

      # Run tests
      - run: bundle exec rake ci:all

      # Store Artifacts
      - store_artifacts:
          path: ~/project/tmp/coverage
          destination: coverage

      - store_artifacts:
          path: ~/project/tmp/capybara
          destination: capybara
